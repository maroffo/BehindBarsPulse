from openai import OpenAI
import os

from core import config


def summarize_with_llm(content, max_tokens=300):
    openai_api_key = config.get("openai_api_key")
    """
    Uses the OpenAI API to extract relevant information from the content.

    Args:
        content (str): The content of the article to analyze.
        max_tokens (int): The maximum number of tokens in the response.

    Returns:
        str: Summary generated by the LLM.
    """
    try:
        system_prompt = (
            """You are an assistant specialized in summarizing articles for a daily newsletter. Your task is to summarize articles concisely, including essential information. Each summary must:
1. Highlight the key points and main message of the article.
2. Be written in clear and professional English, using a neutral and informative tone.
3. Include the author’s name, if available, and cite the original source, specifying if the article was published on another website or newspaper.
4. Be no longer than 3-5 sentences, avoiding unnecessary details or repetitive information.
5. Conclude with a reflection or call to action, if relevant (e.g., ‘This highlights a critical issue’).

Example structure for the summary:
• Author: [Author Name, if available]
• Source: [Name of the original newspaper or website]
• Summary: [Article summary]"""
        )

        client = OpenAI(
            api_key=openai_api_key,
        )
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": content}
            ],
            max_tokens=max_tokens,
            temperature=0.7
        )

        summary = response.choices[0].message.content
        return summary

    except Exception as e:
        print(f"Errore con le API di OpenAI: {e}")
        return "Could not generate a summary."
